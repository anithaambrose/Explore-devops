
Task Description:
-----------------
Setup minikube at your local and explore creating namespaces (Go through official documentation).

Techstacks needs to be used : 

Vbox, WSL
Docker
Minikube 
Kubectl
If the Local system has any issues you can use AWS.
AWS EC2 (t2.medium)
-------------------------------------------------------------------------------------------------------------------
Steps:

1. Checked and installed Homebrew the package manager for macOS.

2. Installed docker by downloading Docker.dmg (docker desktop) file for macOS as docker engine isnt avaiable for mac.
   Double-clicked to open it, Draged the Docker icon into the Applications folder.
   Double-clicked the Docker.app in the Applications folder to start Docker.
   Selected Accept to continue & choose Use recommended settings 
   Selected Finish.

3. Verify docker installtion in commandLine by docker --version command.

-------------------- Please Refer to task-1-Screenshot-1.1 ---------------------------------
4. Install kubectl & minikube via Homebrew.

commands:
    brew install kubectl
    brew install minikube 

-------------------- Please Refer to task-1-Screenshot-1.2 ---------------------------------

5. Start your local Kubernetes cluster using Minikube with driverr as docker.

 commands:
    minikube start --driver=docker

6. Confirm Minikube and Kubernetes are running correctly.

commands:
     minikube status  
     kubectl get nodes

-------------------- Please Refer to task-1-Screenshot-1.3 ---------------------------------

7.Create Namespace using object's manifest .yaml file with development as env.

namespace_manifest.yaml
------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: task-namespace
  labels:
    environment: development

8. Applied the YAML file using kubectl apply & verified the namespace creation using kubectl commnad.

command:
    kubectl apply -f namespace_manifest.yaml
    kubectl get ns

-------------------- Please Refer to task-1-Screenshot-1.4 ---------------------------------
-------------------------------------------------------------------------------------------------------------------
