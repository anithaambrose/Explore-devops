Task Description:
================
Create a custom docker image for nginx and deploy it using docker compose,
where the volume bind mount should be at /var/opt/nginx location.
Push the created custom docker image to your docker-hub.
===================================================================================

Steps:

1. Create an EC2 instance.
    Name - Docker-task
    AMI - Ubuntu

2. Install Keys, Apt sources, docker, docker-compose plugins & other packages.
    # Add Docker's official GPG key:
    sudo apt-get update
    sudo apt-get install ca-certificates curl
    sudo install -m 0755 -d /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    sudo chmod a+r /etc/apt/keyrings/docker.asc

    # Add the repository to Apt sources:
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update

    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

3. Create the project structure
    myapp
    |
    |-Dockerfile
    |-docker-compose.yaml
    |-index.html

    Dockerfile:

    index.html:

4.  Create the docker image & verify 

5.  Deploy the image using docker-compose.yaml file & Verify containers process.

        docker-compose.yaml:


6.  Login to dockerhub 

7.  create a tag using docker tag command 

8.  Push code into dockerhub registry 

9.  Logout of docker registry.

10. Verify docker image in dockerhub registry.




