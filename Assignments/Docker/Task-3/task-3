Task Description:
================
Create a custom docker image for nginx and deploy it using docker compose,
where the volume bind mount should be at /var/opt/nginx location.
Push the created custom docker image to your docker-hub.
===================================================================================
Steps:

1. Create an EC2 instance.
    Name - Docker-task
    AMI - Ubuntu
    SG - inbound rule - add rule - custom TCP ports -8081,8082

2. Install Keys, Apt sources, docker, docker-compose plugins & other packages.
    # Add Docker's official GPG key:
    sudo apt-get update
    sudo apt-get install ca-certificates curl
    sudo install -m 0755 -d /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    sudo chmod a+r /etc/apt/keyrings/docker.asc

    # Add the repository to Apt sources:
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update

    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

3. Create the project structure
    websites
    |-docker-compose.yaml
    |-site-1
        |-Dockerfile
        |-index.html
    |-site-2
        |-Dockerfile
        |index.html

    Dockerfile:
        FROM nginx:alpine
        WORKDIR /usr/share/nginx/html
        COPY . .
        EXPOSE 80

    index.html:
        <html>
        <head><title>SITE 1</title></head>
        <body><h1>Hi from SITE 1</h1></body>
        </html>

    index.html:
        <html>
        <head><title> SITE 2</title></head>
        <body> <h1> Hi from SITE 2</h1></body>
        </html>

4.  Build deploy & run container using docker-compose.yaml file.
        docker-compose.yaml:
        services:
          site-1:
             build:
                context: ./site-1
                image: anitodevops/site-1
                ports:
                  - "8081:80"
                volumes:
                  - ./site-1:/var/opt/nginx

          site-2:
            build:
               context: ./site-2
               image: anitodevops/site-2
               ports:
                - "8082:80"
               volumes:
                - ./site-2:/var/opt/nginx

================== Please refer to task-3-Screenshot-1 ===========================

5.   Build and deploy using docker-compose up -d command.

================== Please refer to task-3-Screenshot-2 ===========================

6.  verify docker images, compose process to verify container are up and running.

================== Please refer to task-3-Screenshot-3 ===========================

7.  Login to dockerhub using docker login 

8.  Push code into dockerhub registry 

9.  Verify docker image in dockerhub registry.

10. Logout of docker registry.

================== Please refer to task-3-Screenshot-4 ===========================





