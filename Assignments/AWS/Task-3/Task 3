Task Description:

1 - Create a S3 bucket, with no public access and upload files to the bucket & 
view the logs using cloudwatch for the uploaded files.

Step 1 :- Created 2 buckets one for Object file and Another for Logs 

Object bucket - task-bucket-101
Log Bucket - task-bucket-101-logs

--------------Please refer to Task_3_Screenshot - 1.1 -------------------------------

Step 2 :- Under Object bucket Properties edited server access Logging by enabling 
and selecting the log bucket under destination.

--------------Please refer to Task_3_Screenshot - 1.2 -------------------------------
Step 3:
a) Created Cloud Trial with storage location as log bucket under the existing bucket name 

Cloud Trial Name - task-bucket-101-CloudTrail

b) Under CloudWatch logs trail attributes section, enabled cloudwatch logs and provided the new loggroup name 
Under Log Events section, Enabled both  Manaagemnet and Data events, provide the Resource type &
selected log all events from the drop down menu.

Loggroup name - task-bucket-101-CW-Log-Group
prefix - task-bucket-101-cloud-trail-prefix
AWS KMS alais - task-bucket-101-KMS
Resource Type - S3 
Role name - CloudWatchRole-task-bucket-101-CloudTrial

--------------Please refer to Task_3_Screenshot - 1.3 -------------------------------

Step 5:- Upload files to the Object Bucket 

--------------Please refer to Task_3_Screenshot - 1.4 -------------------------------

Step 6:- Verified the logs Under cloudwatch by seraching for the Uploaded object( AWS VPC.pdf file ) 

--------------Please refer to Task_3_Screenshot - 1.5 & 1.6 -------------------------------

==========================================================================================================================================================

2 - Launch two ec2-instances and connect it to a application load balancer, where the output traffic from the server must be an load balancer IP address

Step 1:- Created VPC with CIDR block: 10.0.0.0/16
  Name: task-VPC

Step 2:- Created 3 Subnets (1 private Subnet & 2 Public Subnets) 

a) Name - public-sub-1 & public-sub-2
   CIDR block - 10.0.0.0/24 & 10.0.1.0/24 
   Availability Zone -  2 Different Availability Zones ( us-south-1a, us-south-1b) each

b) Name: private-sub
   CIDR block - 10.0.2.0/24
   Availability Zone - us-south-1a

Step 3:- Created an Internet Gateway & Attached it to task-VPC
  Name - task-IGW

--------------Please refer to Task_3 _Screenshot - 2.1 -------------------------------

Step 4:- Allocate Elastic IP & then Create NAT Gateway & attach it to task-VPC
  Name - task-NAT
  Subnet - public-sub

--------------Please refer to Task_3 _Screenshot - 2.2 -------------------------------

Step 5:- Created 2 Route Tables (public & private) associating it with respective subnets 

a)Name - task-route-public
  Route -> Destination as 0.0.0.0/0 & Target as task-IGW

b)Name - task-route-private
  Route -> Destination as 0.0.0.0/0 & Target as task-NAT

--------------Please refer to Task_3 _Screenshot - 2.3 -------------------------------

Step 6:- created a Target Group & added both server 1 and server 2 as targets
Name - task-TG 
Protocol -  HTTP , Port - 80

Step 7:- Created Security Groups for both EC2 & Application Load Balanacer
Name - task-SG-ALB  
Inbound - HTTP (80) from 0.0.0.0/0

Name - task-SG-EC2 SG (for server 1, server 2)
Inbound - HTTP from task-SG-ALB

Step 8:- Created an Application Load Balancer
Name - task-ALB
Listeners-  HTTP on port 80
Security Group - task-SG-ALB
Availability Zones - Added public-sub-1 & public-Sub-2
Target Group - task-TG

--------------Please refer to Task_3 _Screenshot - 2.4 & 2.5 -------------------------------

Step 9: Launched 2 EC2 Instances (Server-Pub to connect as bastion & another as Server-Priv) & created security group for EC2 Allowing  HTTP (port 80) and SSH 

--------------Please refer to Task_3 _Screenshot - 2.6 & 2.7 -------------------------------

Step 10:- Connected to the Server-Pub & jumped to the Server-Priv and pinged google.com to verify the connectivity from private server
ran curl.ifconfig.me ->  & verify the elastic IP is returned. 

--------------Please refer to Task_3 _Screenshot - 2.7 -------------------------------










